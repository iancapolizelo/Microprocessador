0000 000000000000 - nop
0001 rrr010XXXrrr - add R1, R2 (add <ea>y, Dx - Source + Destination -> Destination);
0010 nnnnnnnnXrrr - addq n, R1 (addq #<data>, Dx - Data + Destination -> Destination);
0011 rrr010XXXrrr - sub R1, R2 (sub <ea>y, Dx - Source - Destination -> Destination);
0100 nnnnnnnnXrrr - subq n, R1 (subq #<data>, Dx - Data - Destination -> Destination);
1111 0000nnnnnnnn - jump 

Legenda:

f: 0 - Z; 1 - C
r: registrador (0-7)
n: constante
X: ignorado

Dx, Dy = Destination, Source data Register
<ea>x, <ea>y = Effective Destination, Source address


Aqui o que temos que fazer na ROM:

1. Carrega R3 (o registrador 3) com o valor 5
2. Carrega R4 com 8
3. Soma R3 com R4 e guarda em R5
4. Subtrai 1 de R5
5. Salta para o endereço 20
6. No endereço 20, copia R5 para R3
7. Salta para a terceira instrução desta lista (R5 <= R3+R4)

addq 5, R3 (passo 1)
addq 8, R4 (passo 2)
add r3, r4 -- r3+r4->r4 (passo 3)
sub r5,r5 -- zera o r5 
add r4,r5 -- r4+r5->r5
subq 1, R5 (passo 4)
jump 20(passo 5)
sub r3,r3 -- zero o r3 (passo 6)
add r5,r3
jump 3--pula para a instrução 3